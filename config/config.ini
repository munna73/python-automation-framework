[DEFAULT]
log_level = INFO
export_format = excel
chunk_size = 10000
window_minutes = 60

[DEV_ORACLE]
host = dev-oracle-host.com
port = 1521
service_name = DEVDB
username = dev_user
# Password should be set via environment variable: DEV_ORACLE_PWD

[DEV_POSTGRES]
host = dev-postgres-host.com
port = 5432
database = dev_db
username = dev_user
# Password should be set via environment variable: DEV_POSTGRES_PWD

[DEV_MONGODB]
host = dev-mongo-host.com
port = 27017
database = dev_mongodb
username = dev_user
# Password should be set via environment variable: DEV_MONGODB_PWD

[QA_ORACLE]
host = qa-oracle-host.com
port = 1521
service_name = QADB
username = qa_user
# Password should be set via environment variable: QA_ORACLE_PWD

[QA_POSTGRES]
host = qa-postgres-host.com
port = 5432
database = qa_db
username = qa_user
# Password should be set via environment variable: QA_POSTGRES_PWD

[QA_MONGODB]
host = qa-mongo-host.com
port = 27017
database = qa_mongodb
username = qa_user
# Password should be set via environment variable: QA_MONGODB_PWD

[PROD_ORACLE]
host = prod-oracle-host.com
port = 1521
service_name = PRODDB
username = prod_user
# Password should be set via environment variable: PROD_ORACLE_PWD

[PROD_POSTGRES]
host = prod-postgres-host.com
port = 5432
database = prod_db
username = prod_user
# Password should be set via environment variable: PROD_POSTGRES_PWD

[PROD_MONGODB]
host = prod-mongo-host.com
port = 27017
database = prod_mongodb
username = prod_user
# Password should be set via environment variable: PROD_MONGODB_PWD

[API_ENDPOINTS]
base_url = https://api.example.com/v1
timeout = 30
retry_attempts = 3
auth_type = bearer
# Bearer token should be set via environment variable: API_TOKEN

[MQ_CONFIG]
queue_manager = QM1
channel = SVRCONN.1
host = mq-host.com
port = 1414
queue_name = TEST.QUEUE
username = mq_user
# Password should be set via environment variable: MQ_PWD

[DATABASE_QUERIES]
customer_comparison = SELECT customer_id, customer_name, email, created_date FROM customers WHERE created_date BETWEEN :start_date AND :end_date ORDER BY customer_id
order_comparison = SELECT order_id, customer_id, order_total, order_date FROM orders WHERE order_date BETWEEN :start_date AND :end_date ORDER BY order_id
product_sync = SELECT product_id, product_name, category, price, last_updated FROM products WHERE last_updated >= :last_sync_date

[MONGODB_QUERIES]
customer_find = {"created_date": {"$gte": "start_date", "$lt": "end_date"}}
order_aggregation = [{"$match": {"order_date": {"$gte": "start_date", "$lt": "end_date"}}}, {"$group": {"_id": "$customer_id", "total_orders": {"$sum": 1}, "total_amount": {"$sum": "$order_total"}}}]
user_activity = {"last_login": {"$gte": "start_date"}, "status": "active"}

[EXPORT_SETTINGS]
excel_max_rows = 1000000
csv_encoding = utf-8-sig
date_format = %Y-%m-%d %H:%M:%S
decimal_places = 2

# Updated config/config.ini - Add AWS section
[AWS_CONFIG]
region = us-east-1
sqs_queue_url = https://sqs.us-east-1.amazonaws.com/123456789/test-queue
s3_bucket_name = test-automation-bucket
s3_download_prefix = incoming/
s3_upload_prefix = processed/
# AWS credentials read from environment variables: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY

[AWS_SQS_SETTINGS]
max_messages = 10
wait_time_seconds = 20
visibility_timeout = 30
delete_after_processing = true

[AWS_S3_SETTINGS]
download_directory = data/s3_downloads
create_subdirs = true
max_file_size_mb = 100

[SQL_MESSAGE_TABLE]
table_name = aws_sqs_messages
auto_create_table = true
cleanup_processed_after_days = 30

# Updated .env.template - Add AWS credentials
# AWS Credentials
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_DEFAULT_REGION=us-east-1

# Updated requirements.txt - Add AWS dependencies
boto3>=1.26.0
botocore>=1.29.0