[DEFAULT]
log_level = INFO
export_format = excel
chunk_size = 10000
window_minutes = 60

# Logging configuration
single_log_file = true
separate_error_log = false

# Oracle Database Sections - Use specific section names directly
[S101_ORACLE]
host = s101-oracle-server.company.com
port = 1521
service_name = S101DB
username = s101_user
password = S101_ORACLE_PWD

[S102_ORACLE]
host = s102-oracle-server.company.com
port = 1521
service_name = S102DB
username = s102_user
password = S102_ORACLE_PWD

[S103_ORACLE]
host = s103-oracle-server.company.com
port = 1521
service_name = S103DB
username = s103_user
password = S103_ORACLE_PWD

[S111_ORACLE]
host = s111-oracle-server.company.com
port = 1521
service_name = S111DB
username = s111_user
password = S111_ORACLE_PWD

# PostgreSQL Database Sections - Use specific section names directly
[P101_POSTGRES]
host = p101-postgres-server.company.com
port = 5432
database = p101_database
username = p101_user
password = P101_POSTGRES_PWD

[P102_POSTGRES]
host = p102-postgres-server.company.com
port = 5432
database = p102_database
username = p102_user
password = P102_POSTGRES_PWD

[P103_POSTGRES]
host = p103-postgres-server.company.com
port = 5432
database = p103_database
username = p103_user
password = P103_POSTGRES_PWD

# Query Sections (examples)
[QUERIES]
customer_report = SELECT * FROM customers WHERE active = 'Y'
sales_summary = SELECT product_id, SUM(amount) as total FROM sales GROUP BY product_id
inventory_check = SELECT * FROM inventory WHERE quantity < 10

# Table Sections (examples)
[S101_TABLES]
customer_table = customers
product_table = products
sales_table = sales

[P101_TABLES]
customer_table = customer_data
product_table = product_master
sales_table = transaction_log

# MongoDB Database Sections - Use specific section names directly
[S101_MONGODB]
host = s101-mongo-server.company.com
port = 27017
database = s101_mongodb
username = s101_mongo_user
password = S101_MONGODB_PWD
auth_database = admin

[S102_MONGODB]
host = s102-mongo-server.company.com
port = 27017
database = s102_mongodb
username = s102_mongo_user
password = S102_MONGODB_PWD
auth_database = admin

[P101_MONGODB]
host = p101-mongo-server.company.com
port = 27017
database = p101_mongodb
username = p101_mongo_user
password = P101_MONGODB_PWD
auth_database = admin

# AWS SQS Configuration Sections
[S101_SQS]
region = us-east-1
profile_name = s101-profile
queue_url = https://sqs.us-east-1.amazonaws.com/123456789012/s101-test-queue
access_key_id = S101_AWS_ACCESS_KEY_ID
secret_access_key = S101_AWS_SECRET_ACCESS_KEY
session_token = S101_AWS_SESSION_TOKEN

[S102_SQS]
region = us-west-2
profile_name = s102-profile
queue_url = https://sqs.us-west-2.amazonaws.com/123456789012/s102-test-queue.fifo
access_key_id = S102_AWS_ACCESS_KEY_ID
secret_access_key = S102_AWS_SECRET_ACCESS_KEY
# FIFO queue configuration
message_group_id = s102-message-group
enable_deduplication = true

[P101_SQS]
region = eu-west-1
profile_name = p101-profile
queue_url = https://sqs.eu-west-1.amazonaws.com/987654321098/p101-production-queue
access_key_id = P101_AWS_ACCESS_KEY_ID
secret_access_key = P101_AWS_SECRET_ACCESS_KEY
max_receive_count = 3
visibility_timeout = 300

# AWS S3 Configuration Sections
[S101_S3]
region = us-east-1
profile_name = s101-profile
bucket_name = s101-test-bucket
access_key_id = S101_AWS_ACCESS_KEY_ID
secret_access_key = S101_AWS_SECRET_ACCESS_KEY
default_prefix = messages/test
enable_versioning = false

[S102_S3]
region = us-west-2
profile_name = s102-profile
bucket_name = s102-staging-bucket
access_key_id = S102_AWS_ACCESS_KEY_ID
secret_access_key = S102_AWS_SECRET_ACCESS_KEY
default_prefix = data/staging
enable_versioning = true
storage_class = STANDARD_IA

[P101_S3]
region = eu-west-1
profile_name = p101-profile
bucket_name = p101-production-bucket
access_key_id = P101_AWS_ACCESS_KEY_ID
secret_access_key = P101_AWS_SECRET_ACCESS_KEY
default_prefix = production/messages
enable_versioning = true
storage_class = STANDARD
server_side_encryption = AES256

# IBM MQ Configuration Sections
[S101_MQ]
host = s101-mq-server.company.com
port = 1414
queue_manager = S101QM
channel = S101.SVRCONN
queue_name = S101.TEST.QUEUE
username = s101mquser
password = S101_MQ_PWD
ssl_enabled = false
timeout = 30

[S102_MQ]
host = s102-mq-server.company.com
port = 1414
queue_manager = S102QM
channel = S102.SVRCONN
queue_name = S102.TEST.QUEUE
username = s102mquser
password = S102_MQ_PWD
ssl_enabled = true
ssl_cipher_spec = TLS_RSA_WITH_AES_256_CBC_SHA256
timeout = 30

[P101_MQ]
host = p101-mq-server.company.com
port = 1414
queue_manager = P101QM
channel = P101.SVRCONN
queue_name = P101.PROD.QUEUE
username = p101mquser
password = P101_MQ_PWD
ssl_enabled = true
ssl_cipher_spec = TLS_RSA_WITH_AES_256_CBC_SHA256
timeout = 60
max_message_length = 4194304

# MQ Additional Queues for Different Test Scenarios
[S101_MQ_FIFO]
host = s101-mq-server.company.com
port = 1414
queue_manager = S101QM
channel = S101.SVRCONN
queue_name = S101.FIFO.QUEUE
username = s101mquser
password = S101_MQ_PWD
queue_type = FIFO
ssl_enabled = false

[S101_MQ_PRIORITY]
host = s101-mq-server.company.com
port = 1414
queue_manager = S101QM
channel = S101.SVRCONN
queue_name = S101.PRIORITY.QUEUE
username = s101mquser
password = S101_MQ_PWD
queue_type = PRIORITY
default_priority = 5
ssl_enabled = false

# AWS Configuration for Multiple Environments
[AWS_SHARED]
# Shared AWS configuration
default_region = us-east-1
retry_mode = adaptive
max_attempts = 3
connect_timeout = 10
read_timeout = 30

[AWS_S101]
# Development AWS environment
profile_name = s101-dev
region = us-east-1
sqs_queue_url = https://sqs.us-east-1.amazonaws.com/123456789012/s101-dev-queue
s3_bucket = s101-dev-bucket
s3_prefix = development

[AWS_S102]
# Staging AWS environment
profile_name = s102-staging
region = us-west-2
sqs_queue_url = https://sqs.us-west-2.amazonaws.com/123456789012/s102-staging-queue.fifo
s3_bucket = s102-staging-bucket
s3_prefix = staging

[AWS_P101]
# Production AWS environment
profile_name = p101-prod
region = eu-west-1
sqs_queue_url = https://sqs.eu-west-1.amazonaws.com/987654321098/p101-prod-queue
s3_bucket = p101-prod-bucket
s3_prefix = production

# Message Processing Configuration
[MESSAGE_PROCESSING]
# Default settings for message operations
default_batch_size = 100
max_message_size = 1048576
default_timeout = 30
retry_attempts = 3
export_formats = txt,csv,json,xml
line_separator = \n
encoding = utf-8

# Performance Tuning
[PERFORMANCE]
# Performance settings for different operations
mq_batch_size = 50
sqs_batch_size = 10
s3_multipart_threshold = 8388608
connection_pool_size = 5
thread_pool_workers = 4
enable_parallel_processing = true

# Apache Kafka Configuration Sections
[S101_KAFKA]
bootstrap_servers = s101-kafka-server.company.com:9092,s101-kafka-server2.company.com:9092
client_id = s101-test-automation
group_id = s101-test-group
value_serializer = string
key_serializer = string
value_deserializer = string
key_deserializer = string
auto_offset_reset = latest
enable_auto_commit = true
auto_commit_interval_ms = 5000
session_timeout_ms = 30000
heartbeat_interval_ms = 3000
max_poll_records = 500
fetch_min_bytes = 1
fetch_max_wait_ms = 500
consumer_timeout_ms = 1000
compression_type = none
acks = all
retries = 3
batch_size = 16384
linger_ms = 10
buffer_memory = 33554432
max_block_ms = 60000
request_timeout_ms = 30000
test_topic = s101-connection-test

[S102_KAFKA]
bootstrap_servers = s102-kafka-server.company.com:9092
client_id = s102-test-automation
group_id = s102-test-group
value_serializer = json
key_serializer = string
value_deserializer = json
key_deserializer = string
auto_offset_reset = earliest
enable_auto_commit = false
session_timeout_ms = 45000
heartbeat_interval_ms = 5000
max_poll_records = 1000
compression_type = gzip
acks = 1
retries = 5
batch_size = 32768
linger_ms = 20
security_protocol = SASL_SSL
sasl_mechanism = PLAIN
sasl_username = s102_kafka_user
sasl_password = S102_KAFKA_PWD
test_topic = s102-connection-test

[P101_KAFKA]
bootstrap_servers = p101-kafka-server.company.com:9092,p101-kafka-server2.company.com:9092,p101-kafka-server3.company.com:9092
client_id = p101-production-automation
group_id = p101-production-group
value_serializer = json
key_serializer = string
value_deserializer = json
key_deserializer = string
auto_offset_reset = earliest
enable_auto_commit = true
auto_commit_interval_ms = 1000
session_timeout_ms = 60000
heartbeat_interval_ms = 3000
max_poll_records = 2000
fetch_min_bytes = 1024
fetch_max_wait_ms = 1000
consumer_timeout_ms = 5000
compression_type = lz4
acks = all
retries = 10
batch_size = 65536
linger_ms = 5
buffer_memory = 67108864
max_block_ms = 30000
request_timeout_ms = 60000
security_protocol = SASL_SSL
sasl_mechanism = SCRAM-SHA-256
sasl_username = p101_kafka_user
sasl_password = P101_KAFKA_PWD
ssl_cafile = /etc/ssl/certs/kafka-ca.pem
ssl_certfile = /etc/ssl/certs/kafka-client.pem
ssl_keyfile = /etc/ssl/private/kafka-client.key
test_topic = p101-connection-test

# API Configuration Sections
[API]
base_url = https://api.example.com/v1
timeout = 30
max_retries = 3
retry_delay = 1
retry_status_codes = 500,502,503,504,429
token = API_TOKEN
auth_type = bearer
verify_ssl = true
headers = {"User-Agent": "BDD-Test-Framework/1.0", "Accept": "application/json"}

[TEST_API]
base_url = https://test-api.example.com/v1
timeout = 60
max_retries = 5
retry_delay = 2
retry_status_codes = 500,502,503,504,429
token = TEST_API_TOKEN
auth_type = bearer
verify_ssl = false
headers = {"User-Agent": "BDD-Test-Framework/1.0", "Accept": "application/json", "X-Environment": "test"}

[STAGING_API]
base_url = https://staging-api.example.com/v1
timeout = 45
max_retries = 3
retry_delay = 1
retry_status_codes = 500,502,503,504,429
token = STAGING_API_TOKEN
auth_type = bearer
verify_ssl = true
headers = {"User-Agent": "BDD-Test-Framework/1.0", "Accept": "application/json", "X-Environment": "staging"}

[PROD_API]
base_url = https://prod-api.example.com/v1
timeout = 30
max_retries = 2
retry_delay = 3
retry_status_codes = 500,502,503,504
token = PROD_API_TOKEN
auth_type = bearer
verify_ssl = true
headers = {"User-Agent": "BDD-Test-Framework/1.0", "Accept": "application/json", "X-Environment": "production"}